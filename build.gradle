plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
    gradlePluginPortal()
    maven {
		name = "Mod Menu"
		url = "https://maven.terraformersmc.com/releases/"
	}
	maven {
		name 'Xander Maven'
		url 'https://maven.isxander.dev/releases'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_version}"

    // Official 1.21.9 not released yet, using local version
    //	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modImplementation files("/libs/modmenu.jar")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

def changelogText = ''
def changelogFile = file('CHANGELOG.md')
if (changelogFile.exists()) {
    changelogText = changelogFile.text
}

modrinth {
    token = System.getenv('MODRINTH_TOKEN')
    projectId = 'totemvignette'
    versionNumber = project.mod_version
    versionType = 'release'
    uploadFile = remapJar
    gameVersions = ['1.21.9-rc1']
    loaders = ['fabric']
    changelog = changelogText

    dependencies {
        required.project 'fabric-api'
        required.project 'yacl'
        optional.project 'modmenu'
    }
}